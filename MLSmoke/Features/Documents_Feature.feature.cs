// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MLAutoFramework.MLSmoke.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Documents_Feature")]
    public partial class Documents_FeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Documents_Feature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Documents_Feature", "\tDescription: This feature will test the Document functionality", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the Printing of Docs For Banker System")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        public virtual void VerifyThePrintingOfDocsForBankerSystem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Printing of Docs For Banker System", new string[] {
                        "smoke"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
  testRunner.Given("User Login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
     testRunner.When("User selected Vehicle APP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
  testRunner.And("User navigated to letter docs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
  testRunner.And("User Attached document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
  testRunner.And("User Click on Display Link of the uploaded document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
     testRunner.Then("Print button Should be displayed in the Print Preview Window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the Attaching of .PDF Document less than 4mb")]
        public virtual void VerifyTheAttachingOf_PDFDocumentLessThan4Mb()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Attaching of .PDF Document less than 4mb", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
  testRunner.Given("User Login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
     testRunner.When("User selected Vehicle APP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
  testRunner.And("User navigated to letter docs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
  testRunner.And("User Attached document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
     testRunner.Then("The same PDF document should be displayed in the scanned /Uploaded documents", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the Attaching of .PDF Document more than 4mb")]
        public virtual void VerifyTheAttachingOf_PDFDocumentMoreThan4Mb()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Attaching of .PDF Document more than 4mb", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
  testRunner.Given("User Login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
     testRunner.When("User selected Vehicle APP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
  testRunner.And("User navigated to letter docs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
  testRunner.And("User Attached pdf document of more than 4mb", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
     testRunner.Then("Pop should be displayed as the file you are transferring is too big", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the .JPG Document is not attached")]
        public virtual void VerifyThe_JPGDocumentIsNotAttached()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the .JPG Document is not attached", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
  testRunner.Given("User Login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
     testRunner.When("User selected Vehicle APP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
  testRunner.And("User navigated to letter docs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
  testRunner.And("User Attached .jpg document of less than 4mb", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
     testRunner.Then("Pop up Should be displayed as file type .JPG is not allowed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the visibility of the document to the consumer")]
        public virtual void VerifyTheVisibilityOfTheDocumentToTheConsumer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the visibility of the document to the consumer", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
  testRunner.Given("User Login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
     testRunner.When("User selected Vehicle APP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
  testRunner.And("User navigated to letter docs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
  testRunner.And("User Attached document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
  testRunner.And("Click on show consumer link of the uploaded document  coming in the scanned/uploa" +
                    "ded document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
     testRunner.Then("YES should be displayed In the consumer column of the uploaded document present i" +
                    "n the Scanned / uploaded Documents section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the sharing of the PDF document on the generated link")]
        public virtual void VerifyTheSharingOfThePDFDocumentOnTheGeneratedLink()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the sharing of the PDF document on the generated link", ((string[])(null)));
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
  testRunner.Given("User Login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
     testRunner.When("User selected Vehicle APP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
  testRunner.And("User navigated to letter docs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
  testRunner.And("Copy the generated link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
  testRunner.And("Open the generated link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
  testRunner.And("Upload the PDF document less than 3.91 mb", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
     testRunner.Then("The same PDF document should be displayed in the scanned /Uploaded documents", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the .PDF document of more than 3.91mb must not be shared on the generaded " +
            "link")]
        public virtual void VerifyThe_PDFDocumentOfMoreThan3_91MbMustNotBeSharedOnTheGeneradedLink()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the .PDF document of more than 3.91mb must not be shared on the generaded " +
                    "link", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
  testRunner.Given("User Login successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
     testRunner.When("User selected Vehicle APP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
  testRunner.And("User navigated to letter docs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
  testRunner.And("Copy the generated link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
  testRunner.And("Open the generated link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
  testRunner.And("Upload the PDF document of more than 3.91 mb", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
     testRunner.Then("The file you are transferring is too big Max file size is 3.91MB Message should b" +
                    "e there", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

